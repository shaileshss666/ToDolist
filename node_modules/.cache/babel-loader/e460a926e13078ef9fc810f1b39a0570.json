{"ast":null,"code":"'use strict';\n\nvar acorn = require('acorn');\n\nvar objectAssign = require('object-assign');\n\nmodule.exports = isExpression;\nvar DEFAULT_OPTIONS = {\n  throw: false,\n  strict: false,\n  lineComment: false\n};\n\nfunction isExpression(src, options) {\n  options = objectAssign({}, DEFAULT_OPTIONS, options);\n\n  try {\n    var parser = new acorn.Parser(options, src, 0);\n\n    if (options.strict) {\n      parser.strict = true;\n    }\n\n    if (!options.lineComment) {\n      parser.skipLineComment = function (startSkip) {\n        this.raise(this.pos, 'Line comments not allowed in an expression');\n      };\n    }\n\n    parser.nextToken();\n    parser.parseExpression();\n\n    if (parser.type !== acorn.tokTypes.eof) {\n      parser.unexpected();\n    }\n  } catch (ex) {\n    if (!options.throw) {\n      return false;\n    }\n\n    throw ex;\n  }\n\n  return true;\n}","map":null,"metadata":{},"sourceType":"script"}
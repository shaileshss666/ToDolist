{"ast":null,"code":"'use strict';\n\nvar jstransformer = require('jstransformer');\n\nvar resolve = require('resolve');\n\nmodule.exports = filter;\n\nfunction getMinifyTransformerName(outputFormat) {\n  switch (outputFormat) {\n    case 'js':\n      return 'uglify-js';\n\n    case 'css':\n      return 'clean-css';\n  }\n}\n\nfunction filter(name, str, options, currentDirectory, funcName) {\n  funcName = funcName || 'render';\n  var trPath;\n\n  try {\n    try {\n      trPath = resolve.sync('jstransformer-' + name, {\n        basedir: currentDirectory || process.cwd()\n      });\n    } catch (ex) {\n      trPath = require.resolve('jstransformer-' + name);\n    }\n  } catch (ex) {\n    var err = new Error('unknown filter \":' + name + '\"');\n    err.code = 'UNKNOWN_FILTER';\n    throw err;\n  }\n\n  var tr = jstransformer(require(trPath)); // TODO: we may want to add a way for people to separately specify \"locals\"\n\n  var result = tr[funcName](str, options, options).body;\n\n  if (options && options.minify) {\n    var minifyTranformer = getMinifyTransformerName(tr.outputFormat);\n\n    if (minifyTranformer) {\n      try {\n        result = filter(minifyTranformer, result, null, currentDirectory);\n      } catch (ex) {// better to fail to minify than output nothing\n      }\n    }\n  }\n\n  return result;\n}","map":null,"metadata":{},"sourceType":"script"}
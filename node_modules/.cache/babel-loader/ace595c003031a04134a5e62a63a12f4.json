{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = builder;\n\nvar _definitions = require(\"../definitions\");\n\nvar _validate = require(\"../validators/validate\");\n\nfunction builder() {\n  var type = this;\n  var keys = _definitions.BUILDER_KEYS[type];\n  var countArgs = arguments.length;\n\n  if (countArgs > keys.length) {\n    throw new Error(\"\".concat(type, \": Too many arguments passed. Received \").concat(countArgs, \" but can receive no more than \").concat(keys.length));\n  }\n\n  var node = {\n    type: type\n  };\n\n  for (var i = 0; i < keys.length; ++i) {\n    var key = keys[i];\n    var field = _definitions.NODE_FIELDS[type][key];\n    var arg = void 0;\n    if (i < countArgs) arg = arguments[i];\n\n    if (arg === undefined) {\n      arg = Array.isArray(field.default) ? [] : field.default;\n    }\n\n    node[key] = arg;\n  }\n\n  for (var _key in node) {\n    (0, _validate.default)(node, _key, node[_key]);\n  }\n\n  return node;\n}","map":null,"metadata":{},"sourceType":"script"}